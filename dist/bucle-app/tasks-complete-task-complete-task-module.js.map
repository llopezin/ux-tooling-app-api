{"version":3,"sources":["./src/app/tasks/complete-task/complete-task.component.html","./src/app/tasks/complete-task/complete-task.component.ts","./src/app/tasks/complete-task/components/complete-tree-test/complete-tree-test.component.html","./src/app/tasks/complete-task/components/complete-tree-test/complete-tree-test.component.ts","./src/app/tasks/complete-task/complete-task.module.ts","./src/app/tasks/complete-task/complete-task-routing.module.ts","./src/app/tasks/complete-task/components/complete-survey/complete-survey.component.ts","./src/app/tasks/complete-task/components/complete-survey/complete-survey.component.html","./src/app/shared/services/completed-task-user-store.service copy.ts","./src/app/tasks/complete-task/components/complete-card-sorting/complete-card-sorting.component.html","./src/app/tasks/complete-task/components/complete-card-sorting/complete-card-sorting.component.ts"],"names":[],"mappings":"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","file":"tasks-complete-task-complete-task-module.js","sourcesContent":["<div class=\"[ mt-12 ]\" *ngIf=\"isActive\">\n\n    <app-complete-survey *ngIf=\"task?.type === 'Survey'\" [task]=\"task\"></app-complete-survey>\n    <app-complete-tree-test *ngIf=\"task?.type === 'Tree test'\" [task]=\"task\"></app-complete-tree-test>\n    <app-complete-card-sorting *ngIf=\"task?.type === 'Card sorting'\" [task]=\"task\"></app-complete-card-sorting>\n\n</div>\n\n<div class=\"[ overlay__white ]\" *ngIf=\"!isActive\">\n    \n        \n    <div class=\"[ flex flex-col items-center ]\">\n        <p class=\"[ text-5xl font-bold ]\">Sorry,</p>\n        <p class=\"[ text-4xl font-bold ]\">This task is no longer accepting responses.</p>\n        <p class=\"[ text-2xl font-bold ]\">Thanks for your time :)</p>\n    </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Task } from 'src/app/campaign/models/task.model';\nimport { CompleteTaskService } from './services/complete-task.service';\n\n@Component({\n  selector: 'app-complete-task',\n  templateUrl: './complete-task.component.html',\n  styleUrls: ['./complete-task.component.css']\n})\nexport class CompleteTaskComponent implements OnInit {\n\n  public task: Task;\n  public task_id: string;\n  public isActive: boolean = true;\n  \n  constructor(private taskService: CompleteTaskService, private route: ActivatedRoute) {\n    this.task_id = this.route.snapshot.paramMap.get('id')\n   }\n\n  ngOnInit(): void {\n    this.getTask()\n  }\n\n  getTask(){\n    this.taskService.getTask(this.task_id).subscribe(res => {this.task = res, this.checkTaskIsActive()})\n  }\n\n  checkTaskIsActive(){\n    const responses = this.task.responses.length\n    this.isActive =  responses < this.task.usersRequired\n  }\n\n\n}\n","<div class=\"[ p-14 mt-8  mb-48 ] [ bg-background ] [ rounded-lg shadow-2xl ]\">\n\n    <h2 class=\"[ heading__secondary ]\">Instructions</h2>\n    <p class=\"[ pb-8 ]\">{{task.instructions}}</p>\n\n    <div *ngFor=\"let item of task.tasks; let taskIndex = index\">\n        <h2 class=\"[ heading__secondary ]\">{{ taskIndex + 1 }}. {{item.task}}</h2>\n        <p>Click on a category name to see the items inside.</p>\n\n\n        <div class=\"[ my-12 ]\" id=\"headings\">\n\n            <div class=\"[ level hideChildren ][ border-t border-primary mt-1 cursor-pointer ]\"\n                *ngFor=\"let level1 of task.headings | keyvalue; let i = index\" [id]=\"level1.key\">\n\n\n                <div class=\"[ tt__item ]\">\n                    <div (click)=\"changeChildrenDisplay($event)\" class=\"[ tt__heading ]\">{{level1.key}}</div>\n                    <button class=\"[ underlined color-contrast ]\" (click)=\"selectItem($event)\"\n                        [id]=\"taskIndex\">select</button>\n\n                </div>\n\n                <div class=\"[ level hideChildren ][ ml-8 ]\"\n                    *ngFor=\"let level2 of level1.value | keyvalue; let i = index\" [id]=\"level2.key\">\n                    <div class=\"[ tt__item ]\">\n                        <div (click)=\"changeChildrenDisplay($event)\" class=\"[ tt__heading ]\">{{level2.key}}</div>\n                        <button class=\"[ underlined color-contrast ]\" (click)=\"selectItem($event)\"\n                            [id]=\"taskIndex\">select</button>\n\n\n                    </div>\n\n                    <div class=\"[ level hideChildren ][ ml-16 ]\"\n                        *ngFor=\"let level3 of level2.value | keyvalue; let i = index\" [id]=\"level3.key\">\n                        <div class=\"[ tt__item ]\">\n                            <div (click)=\"changeChildrenDisplay($event)\" class=\"[ tt__heading ]\">{{level3.key}}</div>\n                            <button class=\"[ underlined color-contrast ]\" (click)=\"selectItem($event)\"\n                                [id]=\"taskIndex\">select</button>\n\n\n                        </div>\n\n                        <div class=\"[ level hideChildren ][ ml-24 ]\"\n                            *ngFor=\"let level4 of level3.value | keyvalue; let i = index\" [id]=\"level4.key\">\n                            <div class=\"[ tt__item ]\">\n                                <div (click)=\"changeChildrenDisplay($event)\" class=\"[ tt__heading ]\">{{level4.key}}\n                                </div>\n                                <button class=\"[ underlined color-contrast ]\" (click)=\"selectItem($event)\"\n                                    [id]=\"taskIndex\">select</button>\n\n\n                            </div>\n\n                            <div class=\"[ ml-32 ]\" *ngFor=\"let level5 of level4.value | keyvalue; let i = index\"\n                                [id]=\"level5.key\">\n                                <div class=\"[ tt__item ]\">\n                                    <div class=\"[ tt__heading ]\">{{level5.key}}</div>\n                                    <button class=\"[ underlined color-contrast ]\" (click)=\"selectItem($event)\"\n                                        [id]=\"taskIndex\">select</button>\n\n                                </div>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n\n            </div>\n\n        </div>\n\n    </div>\n\n\n    <button class=\"[ btn gradient-bg w-full ] [ text-xl font-extrabold text-white ]\" (click)=\"onSubmit()\">Submit my\n        answers</button>\n\n\n\n    <div class=\"[ overlay__white ]\" *ngIf=\"taskPosting || taskCompleted\">\n\n\n        <div class=\"[ flex flex-col items-center ]\" *ngIf=\"taskPosting && !taskCompleted\">\n            <div class=\"lds-facebook\">\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n            <p class=\"[ text-4xl font-bold ]\">Submiting your answers</p>\n        </div>\n\n\n\n        <div class=\"[ flex flex-col items-center ]\" *ngIf=\"taskCompleted\">\n            <span class=\"[ text-6xl font-bold text-green-400 ]\">✔</span>\n            <p class=\"[ text-4xl font-bold ]\">Your answers have been submited</p>\n            <p class=\"[ text-4xl font-bold ]\">Thanks for participating</p>\n        </div>\n\n\n    </div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Task } from 'src/app/campaign/models/task.model';\r\nimport { TasksRoutingModule } from 'src/app/tasks/create-task/create-task-routing.module';\r\nimport { CompleteTaskService } from '../../services/complete-task.service';\r\nimport { CompletedTaskUserStoreService } from 'src/app/shared/services/completed-task-user-store.service copy';\r\n\r\n@Component({\r\n  selector: 'app-complete-tree-test',\r\n  templateUrl: './complete-tree-test.component.html',\r\n  styleUrls: ['./complete-tree-test.component.css']\r\n})\r\nexport class CompleteTreeTestComponent implements OnInit {\r\n\r\n  @Input() task: Task;\r\n  public response: {} = {};\r\n  public taskCompleted: boolean = false;\r\n  public taskPosting: boolean = false;\r\n\r\n  constructor(private completeTaskService: CompleteTaskService, private completedTaskStore: CompletedTaskUserStoreService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.taskCompleted = this.completedTaskStore.hasCompletedTask()\r\n    console.log('this.taskCompleted:', this.taskCompleted)\r\n  }\r\n\r\n  changeChildrenDisplay(e) {\r\n    let parent = e.target.parentElement.parentElement\r\n    parent.classList.toggle(\"hideChildren\")\r\n  }\r\n\r\n  selectItem(e) {\r\n    const taskId = +e.target.id + 1;\r\n    this.removeSelected()\r\n    let parent = e.target.parentElement.parentElement\r\n    e.target.parentElement.classList.add(\"selected\")\r\n    const path = []\r\n\r\n    while (parent.id != \"headings\") {\r\n      path.push(parent.id)\r\n      parent = parent.parentElement\r\n    }\r\n\r\n    this.response[taskId] = path.reverse()\r\n  }\r\n\r\n  removeSelected(){\r\n    let selected = document.querySelector(\".selected\")\r\n    selected?.classList?.remove(\"selected\")\r\n  }\r\n\r\n  onSubmit() {\r\n    this.taskPosting = true;\r\n\r\n    this.completeTaskService.postResponse(this.task._id, this.response).subscribe(res => {\r\n      this.taskCompleted = true\r\n      this.completedTaskStore.completeTask(this.task._id)\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompleteSurveyComponent } from './components/complete-survey/complete-survey.component';\nimport { CompleteTreeTestComponent } from './components/complete-tree-test/complete-tree-test.component';\nimport { CompleteCardSortingComponent } from './components/complete-card-sorting/complete-card-sorting.component';\nimport { CompleteTaskComponent } from './complete-task.component';\nimport { CompleteTaskRoutingModule } from './complete-task-routing.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { DragDropModule} from '@angular/cdk/drag-drop';\n\n\n\n@NgModule({\n  declarations: [CompleteSurveyComponent, CompleteTreeTestComponent, CompleteCardSortingComponent, CompleteTaskComponent],\n  imports: [\n    CommonModule, CompleteTaskRoutingModule,  FormsModule, ReactiveFormsModule\n  ]\n})\nexport class CompleteTaskModule { }\n","import { RouterModule, Routes } from \"@angular/router\";\n\nimport { NgModule } from \"@angular/core\";\nimport { CompleteTaskComponent } from \"./complete-task.component\";\n\nconst routes: Routes = [\n{ path: '', component: CompleteTaskComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CompleteTaskRoutingModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Task } from 'src/app/campaign/models/task.model';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CompleteTaskService } from '../../services/complete-task.service';\nimport { CompletedTaskUserStoreService } from 'src/app/shared/services/completed-task-user-store.service copy';\n\n\n@Component({\n  selector: 'app-complete-survey',\n  templateUrl: './complete-survey.component.html',\n  styleUrls: ['./complete-survey.component.css']\n})\nexport class CompleteSurveyComponent implements OnInit {\n\n  public completedTaskForm: FormGroup\n  public taskCompleted: Boolean\n  public taskPosting: Boolean\n  @Input() task: Task\n\n  constructor(private fb: FormBuilder, private completeTaskService: CompleteTaskService, private completedTaskStore: CompletedTaskUserStoreService) { }\n\n  ngOnInit(): void {\n    this.createForm()\n    if(this.completedTaskStore.completed.includes(this.task._id))this.taskCompleted = true \n  }\n\n  createForm() {\n    this.completedTaskForm = this.fb.group(this.createGroup());\n  }\n\n  createGroup() {\n    let formGroup = {}\n\n    this.task.questions.forEach((question, i) => {\n      question.multipleChoice\n        ? formGroup[`question${i + 1}`] = this.createOptionsFormGroup(question)\n        : formGroup[`question${i + 1}`] = [\"\", [Validators.required]]\n    });\n\n    return formGroup;\n\n  }\n\n  createOptionsFormGroup({ options }) {\n    let formGroup = {}\n\n    options.split(',').forEach((option, i) => {\n      formGroup[i] = [\"\"]\n    });\n\n    return this.fb.group(formGroup)\n  }\n\n\n  onSubmit() {\n    const response = this.completedTaskForm.value;\n    const questions = this.task.questions;\n\n    if(!this.completedTaskForm.valid)return\n\n    this.taskPosting = true\n\n    for (let value in response) {\n      let questionIndex = parseFloat(value.replace(/[a-z]/g, '')) - 1\n\n      if (typeof response[value] === \"object\") {\n        let optionsArr = questions[questionIndex].options.split(',')\n        let checkedBoxesValues = optionsArr.filter((option, i) => { return response[value][i] ? option : false })\n\n        response[value] = checkedBoxesValues\n      }\n\n      const questionText = questions[questionIndex].question\n      response[questionText] = response[value]\n\n      delete response[value]\n    }\n\n    this.completeTaskService.postResponse(this.task._id, response).subscribe(res => {\n      this.taskCompleted = true\n      this.completedTaskStore.completeTask(this.task._id)\n    })\n\n  }\n\n}\n","<form class=\"[ px-20 pt-10 pb-16 mb-12 mt-20 ] [ bg-background ] [ rounded-lg shadow-2xl ]\" action=\"\"\n    [formGroup]=\"completedTaskForm\">\n\n\n\n    <div *ngFor=\"let question of task.questions; let i=index\">\n\n        <h3 class=\"[ mt-8 ] [ text-xl font-bold ]\">{{question.question}}</h3>\n\n        <div *ngFor=\"let option of question?.options?.split(','); let optionIndex=index\">\n\n            <div *ngIf=\"!question.multipleChoice\" >\n                <input type=\"radio\" [name]=\"'question'+(i+1)\"\n                    [formControlName]=\"'question'+(i+1)\" [id]=\"'option'+(i+1)+'.'+(optionIndex+1)\" [value]=\"option\" />\n                <label class=\"[ ml-3 ]\" [for]=\"'option'+(i+1)+'.'+(optionIndex+1)\">{{option}}</label>\n            </div>\n\n      \n                <div [formGroupName]=\"'question'+(i+1)\">\n                    <div *ngIf=\"question.multipleChoice === true\">\n                        <input type=\"checkbox\" [name]=\"'option'+(optionIndex+1)\" [formControlName]=\"optionIndex\"\n                            [id]=\"'option'+(i+1)+'.'+(optionIndex+1)\" [value]=\"option\" />\n                        <label class=\"[ ml-3 ]\" [for]=\"'option'+(i+1)+'.'+(optionIndex+1)\">{{option}}</label>\n                    </div>\n                </div>\n\n        </div>\n\n\n        <div *ngFor=\"let tag of question?.tags?.split(','); let tagIndex=index\">\n\n            <input type=\"radio\" [name]=\"'question'+(i+1)\" [formControlName]=\"'question'+(i+1)\" [id]=\"'tag'+(i+1)+'.'+(tagIndex+1)\" [value]=\"tag\" />\n            <label class=\"[ ml-3 ]\" [for]=\"'tag'+(i+1)+'.'+(tagIndex+1)\" >{{tag}}</label>\n\n        </div>\n\n\n    </div>\n\n\n</form>\n\n<button class=\"[ btn gradient-bg w-full ] [ text-xl font-extrabold text-white ]\" (click)=\"onSubmit()\">Submit my answers</button>\n\n\n\n<div class=\"[ overlay__white ]\" *ngIf=\"taskPosting || taskCompleted\">\n    \n        \n    <div class=\"[ flex flex-col items-center ]\" *ngIf=\"taskPosting && !taskCompleted\">\n        <div  class=\"lds-facebook\"><div></div><div></div><div></div></div>\n        <p class=\"[ text-4xl font-bold ]\">Submiting your answers</p>\n    </div>\n\n    \n\n    <div class=\"[ flex flex-col items-center ]\" *ngIf=\"taskCompleted\">\n        <span class=\"[ text-6xl font-bold text-green-400 ]\">✔</span>\n        <p class=\"[ text-4xl font-bold ]\">Your answers have been submited</p>\n        <p class=\"[ text-4xl font-bold ]\">Thanks for participating</p>\n    </div>\n\n\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { AppState } from \"src/app/app.reducers\";\r\nimport { getWorkspace } from \"../store/workspace-store/workspace.actions\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\n\r\nexport class CompletedTaskUserStoreService {\r\n  private _completed: string;\r\n\r\n  \r\n  constructor() {\r\n    console.log('this.getcompletedFromCookies():', this.getcompletedFromCookies())\r\n    this._completed = this.getcompletedFromCookies() || null;\r\n  }\r\n\r\n  set completed(value) {\r\n    this._completed = value;\r\n    document.cookie = `completed=${value}` \r\n  }\r\n\r\n  get completed() {\r\n    return this._completed;\r\n  }\r\n\r\n  hasCompletedTask() {\r\n    return this.completed != null;\r\n  }\r\n\r\n  completeTask(task){\r\n    this._completed = task\r\n    document.cookie = `completed=${task}` \r\n  }\r\n\r\n  getcompletedFromCookies(){\r\n   return document.cookie.replace(/(?:(?:^|.*;\\s*)completed\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\") || null;\r\n  }\r\n\r\n}\r\n","<p class=\"[ my-6 ]\">{{task.instructions}}:</p>\n\n\n<div class=\"[ flex ] [ card ] [ cursor-pointer ]\" *ngFor=\"let card of task.cards; let i = index\" [id]=\"i\" draggable=\"true\"\n  (dragstart)=\"onDragStart($event);\">\n  {{card}}\n</div>\n\n\n<table class=\"[ w-full mt-6 ] [ bg-background ]\">\n\n  <tr *ngFor=\"let category of task.categories\">\n \n    <th class=\"[ h-48 p-3 ] [ bg-primary ] [ border-4 border-white border-b-0 ]\">\n      {{category}}\n    </th>\n \n    <td class=\"[ w-4/5 ] [ align-top ] [ border-4 border-white border-t ]\" [id]=\"category\"\n      (dragover)=\"onDragOver($event)\" (drop)=\"onDrop($event);\">\n      <div class=\"[ drag ]\"></div>\n    </td>\n \n  </tr>\n\n</table>\n\n\n<button class=\"[ btn gradient-bg w-full my-12 px-8 ] [ text-xl font-extrabold text-text ]\" (click)=\"onSubmit()\">Submit my answers</button>\n\n\n\n<div class=\"[ overlay__white ]\" *ngIf=\"taskPosting || taskCompleted\">\n    \n        \n  <div class=\"[ flex flex-col items-center ]\" *ngIf=\"taskPosting && !taskCompleted\">\n      <div  class=\"lds-facebook\"><div></div><div></div><div></div></div>\n      <p class=\"[ text-4xl font-bold ]\">Submiting your answers</p>\n  </div>\n\n  \n\n  <div class=\"[ flex flex-col items-center ]\" *ngIf=\"taskCompleted\">\n      <span class=\"[ text-6xl font-bold text-green-400 ]\">✔</span>\n      <p class=\"[ text-4xl font-bold ]\">Your answers have been submited</p>\n      <p class=\"[ text-4xl font-bold ]\">Thanks for participating</p>\n  </div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Task } from 'src/app/campaign/models/task.model';\nimport { CompleteTaskService } from '../../services/complete-task.service';\n\n@Component({\n  selector: 'app-complete-card-sorting',\n  templateUrl: './complete-card-sorting.component.html',\n  styleUrls: ['./complete-card-sorting.component.css']\n})\nexport class CompleteCardSortingComponent implements OnInit {\n\n  @Input() task: Task;\n  public cards: string[];\n  public categories: string[];\n  public result: {} = {};\n  public taskPosting: boolean;\n  public taskCompleted: boolean;\n\n  constructor(private completeTaskService: CompleteTaskService) { }\n\n  ngOnInit(): void {\n    this.cards = this.task.cards\n    this.categories = this.task.categories\n\n    this.setCategories()\n  }\n\n  setCategories() {\n    this.categories.forEach(category => this.result[category] = [])\n  }\n\n  onDragStart(e) {\n    e.dataTransfer.setData('text/plain', e.target.id);\n  }\n\n  onDragOver(e) {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  onDrop(e) {\n    const i = e.dataTransfer.getData('text');\n    const draggedCardCopy = this.cards[i]\n    const droppedCard = document.createElement('div')\n    const category = e.currentTarget;\n    const categoryName = category.id;\n\n    if (!draggedCardCopy) return\n    e.preventDefault()\n\n    this.result[categoryName].push(draggedCardCopy)\n\n    droppedCard.classList.add('card')\n    droppedCard.innerText = draggedCardCopy\n    droppedCard.draggable = true\n    category.insertAdjacentElement('beforeend', droppedCard)\n\n    this.cards.splice(i, 1)\n  }\n\n  onSubmit() {\n    this.taskPosting = true;\n    this.completeTaskService.postResponse(this.task._id, this.result).subscribe(res=>{\n      this.taskCompleted = true;\n    })\n  }\n\n}\n"],"sourceRoot":"webpack:///"}